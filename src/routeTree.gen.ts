/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as ShedRegisterIndexImport } from './routes/shed-register/index'
import { Route as SearchIndexImport } from './routes/search/index'
import { Route as AddListingIndexImport } from './routes/add-listing/index'

// Create Virtual Routes

const PostPostIdLazyImport = createFileRoute('/post/$postId')()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ShedRegisterIndexRoute = ShedRegisterIndexImport.update({
  id: '/shed-register/',
  path: '/shed-register/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/shed-register/index.lazy').then((d) => d.Route),
)

const SearchIndexRoute = SearchIndexImport.update({
  id: '/search/',
  path: '/search/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search/index.lazy').then((d) => d.Route))

const AddListingIndexRoute = AddListingIndexImport.update({
  id: '/add-listing/',
  path: '/add-listing/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/add-listing/index.lazy').then((d) => d.Route),
)

const PostPostIdLazyRoute = PostPostIdLazyImport.update({
  id: '/post/$postId',
  path: '/post/$postId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/post/$postId.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/post/$postId': {
      id: '/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof PostPostIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/add-listing/': {
      id: '/add-listing/'
      path: '/add-listing'
      fullPath: '/add-listing'
      preLoaderRoute: typeof AddListingIndexImport
      parentRoute: typeof rootRoute
    }
    '/search/': {
      id: '/search/'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchIndexImport
      parentRoute: typeof rootRoute
    }
    '/shed-register/': {
      id: '/shed-register/'
      path: '/shed-register'
      fullPath: '/shed-register'
      preLoaderRoute: typeof ShedRegisterIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/post/$postId': typeof PostPostIdLazyRoute
  '/add-listing': typeof AddListingIndexRoute
  '/search': typeof SearchIndexRoute
  '/shed-register': typeof ShedRegisterIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/post/$postId': typeof PostPostIdLazyRoute
  '/add-listing': typeof AddListingIndexRoute
  '/search': typeof SearchIndexRoute
  '/shed-register': typeof ShedRegisterIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/post/$postId': typeof PostPostIdLazyRoute
  '/add-listing/': typeof AddListingIndexRoute
  '/search/': typeof SearchIndexRoute
  '/shed-register/': typeof ShedRegisterIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/post/$postId'
    | '/add-listing'
    | '/search'
    | '/shed-register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/post/$postId' | '/add-listing' | '/search' | '/shed-register'
  id:
    | '__root__'
    | '/'
    | '/post/$postId'
    | '/add-listing/'
    | '/search/'
    | '/shed-register/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PostPostIdLazyRoute: typeof PostPostIdLazyRoute
  AddListingIndexRoute: typeof AddListingIndexRoute
  SearchIndexRoute: typeof SearchIndexRoute
  ShedRegisterIndexRoute: typeof ShedRegisterIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PostPostIdLazyRoute: PostPostIdLazyRoute,
  AddListingIndexRoute: AddListingIndexRoute,
  SearchIndexRoute: SearchIndexRoute,
  ShedRegisterIndexRoute: ShedRegisterIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/post/$postId",
        "/add-listing/",
        "/search/",
        "/shed-register/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/post/$postId": {
      "filePath": "post/$postId.lazy.tsx"
    },
    "/add-listing/": {
      "filePath": "add-listing/index.tsx"
    },
    "/search/": {
      "filePath": "search/index.tsx"
    },
    "/shed-register/": {
      "filePath": "shed-register/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
